// Shared decorative styles

// Borders
$borderLight: 1px solid $colorWhite01;
$borderMedium: 1px solid $colorGray09;
$borderDark: 1px solid $colorBrand05;

// Transformations
$scaleNormal: scale3d(1, 1, 1);
$scaleUpSmall: scale3d(1.025, 1.025, 1);
$scaleUpLarge: scale3d(1.0425, 1.0425, 1);
$scaleDownSmall: scale3d(.975, .975, 1);
$scaleDownLarge: scale3d(.9575, .9575, 1);
$scaleDownHide: scale3d(.01, .01, 1);
$translateNormal: translate3d(0, 0, 0);
$translateRight: translate3d(4px, 0, 0);
$translateLeft: translate3d(-4px, 0, 0);
$translateUp: translate3d(0, -4px, 0);
$translateDown: translate3d(0, 4px, 0);
$translateUpRight: translat3d(4px, -4px, 0);

// Logo image sizing utilities
$logoWidth: 480px;
$logoHeight: 224px;

// Shadows
%shadowSmall {
	box-shadow: 
	    0 4px 0 -2px rgba($colorBrand04, .12),
	    0 0 0 1px rgba($colorBrand03, .02),
		inset 0 0 0 1px rgba($colorBrand03, .08);
}
%shadowLarge {
	box-shadow: 
		0 24px 12px -12px rgba($colorBrand04, .12),
		0 12px 6px -6px rgba($colorBrand03, .16),
		inset 0 -1px 1px 2px rgba($colorBrand03, .08),
		inset 0 0 0 2px rgba($colorBrand03, .08);
}
%shadowHeadline {
	text-shadow: 
		0 .5px 0 $colorBrand02,
		0 1px 0 $colorBrand01;
}

// Text
// Text underline when hovered
%hoverUnderline {
	&:hover,
	&:focus {
		text-decoration: underline;
		span {
			text-decoration: underline;
		}
	}
}
// Line on sides effects
%lineLeftRight {
	color: $colorBlack01;
	overflow: hidden;
	&::before,
	&::after {
		content: "";
		position: relative;
		display: inline-block;
		vertical-align: middle;
		background-color: $colorBrand05;
		height: 1px;
		width: 50%;
	}
	&::before {
		margin-left: -50%;
	}
	&::after {
		margin-right: -50%;
	}
}
%lineLeft {
	@extend %lineLeftRight;
	&::before {
		width: 100%;
	}
	&::before {
		margin-left: -100%;
	}
	&::after {
		display: none;
	}
}
%lineRight {
	@extend %lineLeftRight;
	&::after {
		width: 100%;
	}
	&::after {
		margin-right: -100%;
	}
	&::before {
		display: none;
	}
}
// Photo banner header text
%heroHeadline {
	background-image: 
		linear-gradient(
			-26deg,
			rgba($colorBrand05, .48),
			rgba($colorBrand04, .72)
		);
	text-shadow: 
		0 .5px 0 $colorBrand02,
		0 1px 0 $colorBrand01;
}

// Transitions
// transition-property beyond transform and opacity are set individually for improved performance 
// timing-function reference: 
// https://material.io/design/motion/speed.html#easing
%transitionVeryFast {
	transition: {
		duration: .08s;
		// Standard curve 
		timing-function: cubic-bezier(.4, 0, .2, 1);
		property: 
			transform,
			opacity;
	}
}
%transitionFast {
	transition: {
		duration: .15s;
		timing-function: cubic-bezier(.4, 0, .2, 1);
		property: 
			transform,
			opacity;
	}
}
%transitionSlow {
	transition: {
		duration: .25s;
		// Acceleration curve
		timing-function: cubic-bezier(.4, 0, 1, 1);
		property: 
			transform,
			opacity;
	}
}

// Pseudo element effects
// Overlay edge
%overlayEdge {
	// Relative positioning required
	position: relative;
	&::before {
		@extend %positionAbsolute;
		@extend %transitionFast;
		content: "";
		z-index: 2;
		user-select: none;
		box-shadow: 
			inset 0 0 2px 2px rgba($colorWhite02, .24),
			inset 0 0 0 1px rgba($colorWhite02, .16);
	}
}
// Hover background
%hoverBackground {
	position: relative;
	&:hover,
	&:focus,
	&:active {
		&::before {
			// Reveal pseudo element
			opacity: 1;
		}
	}
	&::before {
		@extend %positionAbsolute;
		@extend %transitionFast;
		content: "";
		background-color: rgba($colorBrand01, .24);
		// Hide initially, .01 prevents browser repaint
		opacity: .01;
	}
}
// Hover shadow
%hoverShadow {
	position: relative;
	user-select: none;
	&:hover,
	&:focus,
	&:active {
		&::before {
			opacity: 1;
		}
	}
	&::before {
		@extend %positionAbsolute;
		@extend %shadowLarge;
		@extend %transitionFast;
		content: "";
		opacity: .01;
	}
}
%hoverLinkBackground {
	@extend %hoverBackground;
	position: relative;
	color: inherit;
	z-index: 2;
	span {
		position: relative;
		color: inherit;
	}
	&:hover,
	&:focus {
		color: $colorWhite01;
		span {
			color: inherit;
		}
	}
	&::before {
		background-color: rgba($colorBrand01, .96);
		z-index: -1;
	}
}
%hoverShowIcon {
	&:hover,
	&:focus {
		svg {
			opacity: 1;
		}
	}
	svg {
		@extend %transitionFast;
		opacity: .01;
	}
}

// Backgrounds

// Background gradients
// Transparent to off-white
%gradientOffwhiteFadeOut {
	background-image: 
		linear-gradient(
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 0)
		);
}
// Off-white to transparent
%gradientOffwhiteFadeIn {
	background-image: 
		linear-gradient(
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 1)
		);
}
// Off-white to transparent to off-white
%gradientOffwhiteFadeOutIn {
	background-image: 
		linear-gradient(
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 1)
		);
}
// Transparent to off-white to transparent
%gradientOffwhiteFadeInOut {
	background-image: 
		linear-gradient(
			rgba($colorWhite05, 0),
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 0)
		);
}
// White to transparent to White
%gradientWhiteFadeOutIn {
	background-image: 
		linear-gradient(
			rgba($colorWhite01, 1),
			rgba($colorWhite01, 0),
			rgba($colorWhite01, 0),
			rgba($colorWhite01, 1)
		);
}
// Transparent to White to transparent
%gradientWhiteFadeInOut {
	background-image: 
		linear-gradient(
			rgba($colorWhite01, 0),
			rgba($colorWhite01, 1),
			rgba($colorWhite01, 1),
			rgba($colorWhite01, 0)
		);
}

// %gradientWhiteFadeInOut {
// 	background-image: 
// 		linear-gradient(
// 			rgba($colorWhite01, 0),
// 			rgba($colorWhite01, 1),
// 			rgba($colorWhite01, 1),
// 			rgba($colorWhite01, 0)
// 		);
// }

// Pattern background images
// Shared background pattern styles

// Logo pattern measurements
$patternWidth: 448px;
$patternHeight: 192px;

%patternSize {
	background: {
		repeat: repeat;
		position: top center;
		// Dimensions calculated based on actual svg size
		// Sizes matched hero background image pattern sizes
		size: 
			$patternWidth / 3.5
			$patternHeight / 3.5;
	}
	@include forDesktopOnly {
		background-size: 
			$patternWidth / 3.75
			$patternHeight / 3.75;
	}
	@include forTabletOnly {
		background-size: 
			$patternWidth / 5.5
			$patternHeight / 5.5;
	}
	@include forPhoneOnly {
		background-size: 
			$patternWidth / 6
			$patternHeight / 6;
	}
	@include forBigDesktopUp {
		background-size: 
			$patternWidth / 2.5
			$patternHeight / 2.5;
	}
}
// White pattern
%patternWhite {
	@extend %patternSize;
	background-image: 
		url("https://res.cloudinary.com/adamska/image/upload/v1/ui/background-pattern_ffffff.svg");
}
// Off-white pattern
%patternOffwhite {
	@extend %patternSize;
	background-image: 
		url("https://res.cloudinary.com/adamska/image/upload/v1/ui/background-pattern_f3f3f3.svg");
}
// Indigo pattern
%patternIndigo {
	@extend %patternSize;
	background-image: 
		url("https://res.cloudinary.com/adamska/image/upload/v1/ui/background-pattern_272149.svg");
}
// Deep Indigo pattern
%patternDeepIndigo {
	@extend %patternSize;
	background-image: 
		url("https://res.cloudinary.com/adamska/image/upload/v1/ui/background_pattern_161229.svg");
}

// Section backgrounds
%sectionBackground01 {
	@extend %gradientOffwhiteFadeOutIn;
	&::before {
		@extend %positionAbsolute;
		@extend %patternWhite;
		content: "";
		// Position pattern below gradient
		z-index: -1;
		background-color: $colorWhite05;
	}
}
%sectionBackground02 {
	@extend %gradientOffwhiteFadeInOut;
	&::before {
		@extend %positionAbsolute;
		@extend %patternWhite;
		content: "";
		z-index: -1;
		background-color: $colorWhite05;
	}
}
%sectionBackground03 {
	@extend %gradientWhiteFadeOutIn;
	&::before {
		@extend %positionAbsolute;
		@extend %patternOffwhite;
		content: "";
		z-index: -1;
		background-color: $colorWhite01;
	}
}
%sectionBackground04 {
	@extend %gradientWhiteFadeInOut;
	&::before {
		@extend %positionAbsolute;
		@extend %patternOffwhite;
		content: "";
		z-index: -1;
		background-color: $colorWhite01;
	}
}

// Create half backgrounds

%backgroundStyle {
	&::before,
	&::after {
		content: "";
		position: absolute;
		display: block;
		left: 0;
		right: 0;
		height: 50%;
	}
	&::before {
		z-index: -1;
		top: 0;
		background-position: bottom center;
	}
	&::after {
		z-index: -2;
		bottom: 0;
		background-position: top center;
	}
}

%backgroundLight {
	@extend %backgroundStyle;
	background-image: 
		linear-gradient(
			rgba($colorWhite01, 1),
			rgba($colorWhite01, 0),
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 0),
			rgba($colorWhite01, 1)
		);
	&::before {
		@extend %patternWhite;
		background-color: $colorWhite05;
	}
	&::after {
		@extend %patternOffwhite;
		background-color: $colorWhite01;
	}
}

%backgroundLightAlternate {
	@extend %backgroundStyle;
	background-image: 
		linear-gradient(
			rgba($colorWhite01, 1),
			rgba($colorWhite01, 0),
			rgba($colorWhite05, 1),
			rgba($colorWhite05, 0),
			rgba($colorWhite01, 1)
		);
	&::before {
		@extend %patternOffwhite;
		background-color: $colorWhite01;
	}
	&::after {
		@extend %patternWhite;
		background-color: $colorWhite05;
	}
}

%backgroundDark {
	@extend %backgroundStyle;
	background-image: 
		linear-gradient(
			rgba($colorBrand04, 1),
			rgba($colorBrand04, 0),
			rgba($colorBrand03, 1),
			rgba($colorBrand03, 0),
			rgba($colorBrand03, 1)
		);
	&::before {
		@extend %patternDeepIndigo;
		background-color: $colorBrand03;
	}
	&::after {
		@extend %patternIndigo;
		background-color: $colorBrand04;
	}
}

%backgroundDarkAlternate {
	@extend %backgroundStyle;
	background-image: 
		linear-gradient(
			rgba($colorBrand03, 1),
			rgba($colorBrand03, 0),
			rgba($colorBrand04, 1),
			rgba($colorBrand04, 0),
			rgba($colorBrand04, 1)
		);
	&::before {
		@extend %patternDeepIndigo;
		background-color: $colorBrand03;
	}
	&::after {
		@extend %patternIndigo;
		background-color: $colorBrand04;
	}
}

// Animations

// Slideshows — used in cards and navigation components
%animationSlideshow {
	animation: {
		name: slideshow; 
		duration: 2s;
		timing-function: ease-in;
		iteration-count: infinite;
		fill-mode: forwards;
		direction: normal;
		play-state: paused;
	}
}
// Basic fade in — used in mobile navigation
%animationFadeIn {
	animation: {
		name: fadeIn;
		duration: .33s;
		timing-function: ease-in;
		iteration-count: 1;
		fill-mode: forwards;
		direction: normal;
		play-state: paused;
	}
}

// Animation keyframes
// "%animationSlideshow" keyframes
@keyframes slideshow {
	0% { 
		// .01 avoids browser repaint
		opacity: .01; 
	}
	11% { 
		opacity: 1; 
	}
	33% { 
		opacity: 1; 
	}
	44% { 
		opacity: .01; 
	}
	100% { 
		opacity: .01; 
	}
}
// "%animationFadeIn" keyframes
@keyframes fadeIn {
	0% {
		opacity: 0;
		transform: $scaleUpLarge;
	}
	100% { 
		opacity: 1; 
		transform: $scaleNormal;
	}
}